{"version":3,"sources":["firebase/firebase.js","Components/Helpers.js","Components/allEventsPage.js","Components/createEvents.js","Components/individualEventsPage.js","App.js","serviceWorker.js","index.js","Images/hyprlink_title2.png","Images/plus.png","Images/faces3.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","getData","url","shortUrl","console","log","AllEventsPage","useState","items","setItems","useEffect","firestore","collection","get","then","docData","docs","map","item","id","slice","key","to","data","name","createEvents","props","handleNameChange","e","setState","target","value","handleLocationChange","location","handleTimeChange","time","handleDateChange","date","handlePriceChange","price","handleDescriptionChange","description","submitForm","add","state","docRef","catch","error","Date","toContact","src","hyprlink_title","alt","plus","className","htmlFor","type","this","onChange","placeholder","selected","onClick","faces","React","Component","IndividualEventsPage","doc","window","pathname","href","App","path","exact","component","IndividualEvents","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f974f61a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA1JlRWdErM-H0-XY3AbsfiJgYYwEepLrU\",\r\n    authDomain: \"hyprlink-f461d.firebaseapp.com\",\r\n    databaseURL: \"https://hyprlink-f461d.firebaseio.com\",\r\n    projectId: \"hyprlink-f461d\",\r\n    storageBucket: \"hyprlink-f461d.appspot.com\",\r\n    messagingSenderId: \"333297777039\",\r\n    appId: \"1:333297777039:web:5484a563515ab5d3e873fa\",\r\n    measurementId: \"G-HR6GS3WCHN\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n  export default firebase;","function getData(url, shortUrl){\r\n    console.log(url, shortUrl);\r\n    return (url, shortUrl);\r\n}\r\n    export default getData;\r\n","import React from 'react';\r\nimport firebase from '../firebase/firebase';\r\nimport {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport getData from './Helpers';\r\n\r\nfunction AllEventsPage() {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n          const db = firebase.firestore();\r\n          (db.collection(\"events\").get().then(items => {\r\n          const docData = items.docs;\r\n          console.log(docData);\r\n          setItems(docData);\r\n        }));\r\n      }, []);    \r\n\r\n  return (\r\n    <div>\r\n      {items.map(item => (\r\n        getData(item.id, item.id.slice(0, 5)),\r\n        <h1 key={item.id}>\r\n        <Link to={`/event/${item.id}`}>{<button>{item.data().name}</button>}</Link>\r\n        </h1>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n  export default AllEventsPage;  ","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nimport \"../CSS/createEvents.css\";\r\n\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport hyprlink_title from \"../Images/hyprlink_title2.png\";\r\nimport plus from \"../Images/plus.png\";\r\nimport faces from \"../Images/faces3.png\";\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nclass createEvents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      location: \"\",\r\n      time: \"00:00\",\r\n      date: new Date(),\r\n      price: \"0\",\r\n      description: \"\",\r\n      toContact: false\r\n    };\r\n  }\r\n  \r\n  handleNameChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handleLocationChange = e => {\r\n    this.setState({ location: e.target.value });\r\n  };\r\n  handleTimeChange = e => {\r\n    this.setState({ time: e.target.value });\r\n  };\r\n  handleDateChange = e => {\r\n    this.setState({ date: e });\r\n  };\r\n  handlePriceChange = e => {\r\n    this.setState({ price: e.target.value });\r\n  };\r\n  handleDescriptionChange = e => {\r\n    this.setState({ description: e.target.value });\r\n  };\r\n\r\n  submitForm = () => {\r\n    let db = firebase.firestore();\r\n    db.collection(\"events\")\r\n      .add(this.state)\r\n      .then(function(docRef) {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //add linking statement here once megan pushes\r\n\r\n    return (\r\n      <div>\r\n        <img id=\"title\" src={hyprlink_title} alt=\"hyprlink\"></img>\r\n        <img id=\"plus\" src={plus} alt=\"+\"></img>\r\n\r\n        <form >\r\n          <h2>CREATE NEW EVENT</h2>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nameInput\"></label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange}\r\n              className=\"form-control\"\r\n              id=\"nameInput\"\r\n              placeholder=\"ENTER EVENT NAME\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"locationInput\"></label>\r\n            <span>Location</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={this.state.location}\r\n              onChange={this.handleLocationChange}\r\n              className=\"form-control\"\r\n              id=\"locationInput\"\r\n              placeholder=\"Address or link\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dateInput\"></label>\r\n            <span>Date</span>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.handleDateChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"timeInput\"></label>\r\n            <span>Time</span>\r\n            <input\r\n              type=\"time\"\r\n              name=\"time\"\r\n              value={this.state.time}\r\n              onChange={this.handleTimeChange}\r\n              className=\"form-control\"\r\n              id=\"timeInput\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"priceInput\"></label>\r\n            <span>Price</span>\r\n            <input\r\n              type=\"price\"\r\n              name=\"price\"\r\n              value={this.state.price}\r\n              onChange={this.handlePriceChange}\r\n              className=\"form-control\"\r\n              id=\"priceInput\"\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"descriptionInput\"></label>\r\n            <span>Description</span>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              onChange={this.handleDescriptionChange}\r\n              className=\"form-control\"\r\n              id=\"descriptionInput\"\r\n              placeholder=\"Write about this event\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"submit\" onClick={this.submitForm}>\r\n            HYPRLNK IT\r\n          </button>\r\n        </form>\r\n\r\n        <img id=\"smiles\" src={faces} alt=\"smiles\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default createEvents;\r\n","import React from 'react';\r\nimport firebase from '../firebase/firebase';\r\nimport {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction IndividualEventsPage() {\r\n    const[items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n          const db = firebase.firestore();\r\n          (db.collection(\"events\").doc(window.location.pathname.slice(7)).get().then(items => {\r\n          const docData = items.data();\r\n          console.log(window.location.pathname.slice(7));\r\n          console.log(docData);\r\n          setItems(docData);\r\n        }));\r\n      }, []);   \r\n\r\n  console.log(items);\r\n  return (\r\n    <div>\r\n        <h1>{items.name}</h1>\r\n        <h3>{items.location}</h3>\r\n        <h3>{items.date}</h3>\r\n        <h3>{items.time}</h3>\r\n        <h3>{items.price}</h3>\r\n        <h3>{items.description}</h3>\r\n        <h3>\r\n        <Link to={window.location.pathname}>{window.location.href}</Link>\r\n        </h3>\r\n    </div>\r\n  );\r\n}\r\nexport default IndividualEventsPage;\r\n","import React from \"react\";\r\nimport AllEventsPage from \"./Components/allEventsPage\";\r\nimport createEvents from \"./Components/createEvents\";\r\nimport IndividualEvents from \"./Components/individualEventsPage\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route path=\"/events\" exact component={AllEventsPage} />\r\n        <Route path=\"/hyprlnk\" exact component={createEvents} />\r\n        {/* <Route path=\"/newEvent\" component={createEvents} /> */}\r\n        <Route path=\"/event/:id\" component={IndividualEvents} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/hyprlink_title2.3d637d24.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.83050630.png\";","module.exports = __webpack_public_path__ + \"static/media/faces3.69c79402.png\";"],"sourceRoot":""}